[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Welcome to the documentation for the WGOA repository. This site describes the structure, data sources, and workflows used in this project."
  },
  {
    "objectID": "index.html#wgoa-repository",
    "href": "index.html#wgoa-repository",
    "title": "Home",
    "section": "",
    "text": "Welcome to the documentation for the WGOA repository. This site describes the structure, data sources, and workflows used in this project."
  },
  {
    "objectID": "index.html#sections",
    "href": "index.html#sections",
    "title": "Home",
    "section": "Sections",
    "text": "Sections\n\ncode: Scripts for data wrangling and manipulation.\ndata: Raw input data used in analyses.\nlookups: Tables and scripts for building lookup tables.\nWGOA_source_data: Original datasets from the WGOA survey.\nwgoa_data_rpath_fitting: Processed data ready for RPath model fitting."
  },
  {
    "objectID": "code.html",
    "href": "code.html",
    "title": "WGOA-Ecopath-Rpath Model Documentation",
    "section": "",
    "text": "Here we have all the code associated with the data wrangling."
  },
  {
    "objectID": "code.html#code",
    "href": "code.html#code",
    "title": "WGOA-Ecopath-Rpath Model Documentation",
    "section": "",
    "text": "Here we have all the code associated with the data wrangling."
  },
  {
    "objectID": "code.html#folder-structure",
    "href": "code.html#folder-structure",
    "title": "WGOA-Ecopath-Rpath Model Documentation",
    "section": "Folder structure",
    "text": "Folder structure\nScripts are separated by their main function:\n\nr_files &lt;- list.files(path = \"~/WGOA-Ecopath-Rpath/code\", pattern = \"\\\\.r$\", full.names = FALSE, ignore.case=TRUE)\n\ncat(paste0(\"- \", r_files, collapse = \"\n\"))\n\n- akfin_to_EwE_format_v2.R\n- akfin_wgoa_catch_2023.R\n- bioenergetic_GOA_Q10_aveTemp_script.R\n- bioenergetic_pars2.r\n- bioenergetic_projections.r\n- Delta_correction.R\n- FourSystems_comp.R\n- FourSystems_functions.R\n- GAP_get_biomass_stratum.R\n- GAP_get_cpue.R\n- GAP_get_cpue_guild.R\n- ggraph_webplot_Rpath.R\n- GOA_rpath_setup.R\n- mammals_birds_salmon_biomass_timeseries.R\n- multistanza_maturity_proportions.R\n- pedigree_coversion_Rpath_EwE.R\n- race_biomass_timeseries_var_sd_se_cv.R\n- race_biomass_timeseries_var_sd_se_cv_general_code.R\n- REEM_download_functions.R\n- REEM_fooddata_functions.R\n- ROMS_data_transformation_anomaly.R\n- ROMS_output_WGOA_EGOA.R\n- rpath_graphs.R\n- rsim.plot.interactive.R\n- running_ecopath_network_plot.R\n- wgoa_Btarget.R\n- WGOA_EGOA_comp.R\n- WGOA_guilds_temp.R\n- xml_convert.r\n\n\n\nAKFIN:\n\nakfin_wgoa_catch_2023.R: This script retrieves and processes catch data from the AKFIN database for the WGOA region.\nakfin_to_EwE_format_v2.R: This script transforms the data retrieved from akfin_wgoa_catch_2023.R into a format suitable for Rpath.\n\nBIOENERGETICS:\n\nbioenergetic_GOA_Q10_aveRTemp_script.R: Script to update the group names of the “bioenergetic_EBS_ACLIM2_bioen.csv” file #to match WGOA names.\nbioenergetic_pars2.r: Bioenergetic params for GOACLIM. Uses the “WGOA_source_data/WGOA_bioen.csv” lookup file generated by the script above. It also uses the “WGOA_source_data/species_weighted_temp_WGOA.csv” file generated by the script WGOA_guilds_temp.\nbioenergetic_projections.r: This script will source the bioenergetic_pars2.r and apply the function bioen_params() that apply the consumption modifiers and respiration modifiers.\n\nROMS Climate Projections:\n\nDelta_correction.R: Script to update the group names of the bioenergetic_EBS_ACLIM2_bioen.csv file #to match WGOA names.\nROMS_output_WGOA_EGOA.R: Script for ROMS data collection # https://github.com/GOA-CLIM/ROMS_to_Index/blob/main/ROMS%20index%20generation%20example.qmd. This script sources the delta correction function, gathers the data for the different ssps, then will extract the Biomass and Production.\nFor biomass data transformation into EwE/Rpath input, filter data for depthclass “All” and NMFS_AREA 640,650 EGOA and 610-630 WGOA only.\nCarbon to wet weight conversions (B_ww_mg) can be found at:\nTable 1 (bottom explanation) from Pauly & Christensen 1995 for phytoplankton\n9: 1 ratio for the conversion of wet weight to carbon (Lockhart. A. & Cross. R. A. 1994. EMBO J. 13, 751-757)\nTable 2. from Kiorboe 2013 for the zooplankton\nLog(C mass)= a+blog(wet mass)\nC_to_ww &lt;- 10^((log10(value) - a) / b)\nUnits of Cop in the sum* files are mg C m^-2 of water column. Since the unit is already by area the conversion from mgm^-2 to mtkm^-2 will be *1e-3.\nThe script uses the files in ~/Data/NEP_10K_revised_indices/\nto produce the files in\n  out_folder &lt;- \"WGOA_source_data/ROMSOutputWGOA\"\n  out_folder2 &lt;- \"wgoa_data_rpath_fitting/\"\nFile names example: “/Long_”, region, “temp_monthly”, depth, “.csv”\nThe final formatted time-series files are saved in /wgoa_data_rpath_fitting/, and detailed monthly data is saved in /WGOA_source_data/ROMSOutputWGOA/.\nROMS_data_transformation_anomaly.R: is a retired code basis for the anomaly transformation that we see in ROMS_output_WGOA_EGOA.\n\nRACE GAP data:\n\nrace_biomass_timeseries_var_sd_se_cv_general_code.R: This script was written to gather race data. At the moment the full race data sets are in the googledrive. The function REEM.loadclean.RACE.googledrive() found in the REEM_fooddata_fuctions.R script will load the data from the googledrive and clean it. Here we are using\n\nREEM.loadclean.strata.by.stratum(strata_lookup_file    = \"lookups/combined_BTS_strata.csv\",\n                             stratum_bin_column    = \"stratum\")\nto load the strata lookup file, which is used to filter the data by stratum.\nFor multistanza groups: One extra step is needed to calculate biomasses by juvenile and adult stages. We need the “lookups/Alaska_Multistanza_GOA_vonb_2025_04_30_v2.csv” file to do this. The script will use the read.clean.csv() function to load the VB file, which has all the information about cut-off length and growth rates for each species. The script will then use the read.clean.csv() function to load the strata lookup file, which is used to filter the data by stratum. The file has to be replaced to accomodate the different models.\nThe output file will be in the /wgoa_data_rpath_fitting/ folder, with the name “race_biomass_ts.csv” This file relies on the functions from the following scripts:\n\nREEM_download_functions.R: This script contains the functions used to download the data from the ORACLE database.\nREEM_fooddata_fuctions.R: This script contains the functions used to load and clean the data from the googledrive or can be modified to load data from a local folder. This code sources three other scripts with functions:\n\nGAP_get_cpue.R\nGAP_get_biomass_stratum.R\nGAP_get_cpue_guild.R\n\n\nRefer to the scripts to get familiarized with the functions.\nPEDIGREE:\n\npedigree_conversion_Rpath_EwE.R: This script will read the rpath pedigree file to create a EwE pedigree file.\n\nPLOTS\n\nggraph_webplot_Rpath.R: Network plot for object Rpath. This function is part of the rpathviz:: package developed by Bia Dias.\nrsim.plot.interactive.R: Plot for showing the relative biomass plot for Rsim objectm, using plotly::. This function is part of the rpathviz:: package.\nrpath_graphs.R: first version of the rsim.plot.interactive() funtion. Deprecated.\n\nEXPERIMENTAL CODE"
  }
]